[
    {
        "question":" What are the different ways to manage a state in a React application?",
        "ans":"In React, There are many ways to handle state . First of all url. We can store some data like the id of the current item, filtering parameters , pagination offset and limit and sorting data.Secondly we can store data in web storage like cookies and local storage. although it's not recommended to store sensitive data in web storage. Thirdly  we can share data in common parents components. This called lifting state.We can share data from common parents to their children parents using props. The lifting state avoids duplicating states in multiple components. It helps to assure that our components all consistently reflect the same state. Fourthly we can pass state data using useRefs. Using useRef we can Accessing a DOM element,Storing mutable information without triggering a re-render of that component.And lastly Context API. The Context API can be used to share data with multiple components, without having to pass data through props manually. So we don't have to pass data every child components using props. ",
        "img":"https://cdn.hashnode.com/res/hashnode/image/upload/v1621503743613/eGkZpP6mP.png"
    },
    {
        "question":"How does prototypical inheritance work?",
        "ans":"Everything in Javascript is an object. Even when creating a Class is an Object via an Object Literal or Constructor Function.So, the core idea of Prototypal Inheritance is that an object can point to another object and inherit all its properties. The main purpose is to allow multiple instances of an object to share common properties, hence, the Singleton Pattern. So if we want to sent an object with the same properties , normally we can't send to object with same properties. But if we can send it in via prototype. We can send object using proto syntax. ",
        "img":"https://www.cronj.com/blog/wp-content/uploads/inheritance.png"
    },
    {
        "question":"What is a unit test? Why should we write unit tests?",
        "ans":"Unit testing is a software development process in which the smallest testable parts of an application, called units, are individually and independently scrutinized for proper operation. Unit testing is an important step in the development process, because if done correctly, it can help detect early flaws in code which may be more difficult to find in later testing stages. There are many reason why we should use unit test. If we do unit testing, we can identify problems earlier and it won't occurs large components problem. Its also helps to fix the problem earlier ,so it makes error handling and debugging process easy. Developers can quickly make changes to the code base and re-use code, migrating it to new projects.",
        "img":"https://i.ytimg.com/vi/lj5nnGa_DIw/maxresdefault.jpg"
    },
    {
        "question":" React vs. Angular vs. Vue?",
        "ans":"React, Angular, Vue are the most popular JavaScript frameworks. React is a UI library, Angular is a fully-fledged front-end framework, while Vue.js is a progressive framework.They can be used almost interchangeably to build front-end applications, but they're not 100 percent the same, so it makes sense to compare them and understand their differences.Firstly React can be used as a UI library to render elements, without enforcing a specific project structure, and that's why it's not strictly a framework. It uses virtual dom . Virtual dom changes the real dom whenever something change in code. instead of rendering all the dom , react just render specifics components which have been changed by comparing virtual dom. Secondly, AngularJS, the original framework, is an MVC (Model-View-Controller)) framework. But in Angular 2, there's no strict association with MV*-patterns as it is also component-based.Projects in Angular are structured into Modules, Components, and Services. Each Angular application has at least one root component and one root module.Angular templates are written in HTML but can also include Angular template syntax with special directives to output reactive data and render multiple elements, among other things.Angular is built in TypeScript, so its use is recommended to get the most seamless experience, but plain JavaScript is also supported. Thirdly, The Vue.js core library focuses on the View layer only. It's called a progressive framework because you can extend its functionality with official and third-party packages, such as Vue Router or Vuex, to turn it into an actual framework. With Vue, you'll be working mostly on the ViewModel layer, to make sure that the application data is processed in a way that allows the framework to render an up-to-date View.Components in Vue are small, self-contained, and can be reused throughout the application",
        "img":"https://presence.agency/wp-content/uploads/2020/07/1_lC1kj3IeXoE8Z3OCKJoWkw.jpeg"
    }
]